<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.account.service.AccountService"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="com.account.repository.AccountRepository"/>
    <fullyQualifiedTypeName name="com.account.dao.AccountModel"/>
    <fullyQualifiedTypeName name="javax.security.auth.login.AccountNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.Objects"/>
    <fullyQualifiedTypeName name="com.account.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="jakarta.annotation.Generated"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.account.dao.AddMoneyModel"/>
    <fullyQualifiedTypeName name="com.account.exception.AccountServiceException"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Transient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.account.dao.ApiResponseModel"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="com.customer.exceptions.CustomerServiceException"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.http.RequestEntity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.account.dao.CustomerDao"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.account.external.service.CustomerService"/>
    <fullyQualifiedTypeName name="jakarta.annotation.Nonnull"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.customer.external.service.AccountService"/>
    <fullyQualifiedTypeName name="com.customer.model.ApiResponseModel"/>
    <fullyQualifiedTypeName name="com.account.entity.AccountEntity"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="feign.codec.ErrorDecoder"/>
    <fullyQualifiedTypeName name="feign.Response"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.account.exception.CustomerNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
</qualifiedTypeNameHistroy>
